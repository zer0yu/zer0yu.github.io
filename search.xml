<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Hexo 3.x 博客搭建指南(NEXT主题)]]></title>
      <url>%2F2017%2F01%2F21%2FHexo-3-x-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97-NEXT%E4%B8%BB%E9%A2%98%2F</url>
      <content type="text"><![CDATA[GitHub Pages 本用于介绍托管在 GitHub 的项目，也可以用来搭建博客，有300M免费空间。 hexo是一个基于Node.js的静态博客程序，可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的tommy351。优势： 生成静态页面快支持 Markdown兼容于 Windows, Mac &amp; Linux部署方便。日常使用仅需五个命令。高扩展性、自订性，文件少、小，易理解 配置SSH使用hexo博客必须配置SSH。 打开git bash，输入cd ~/.ssh，如果果提示：No such file or directory 说明未配置SSH。 本地生成密钥对ssh-keygen -t rsa -C &quot;你的邮件地址&quot;，注意命令中的大小写不要搞混。按提示指定保存文件夹，不设置密码。 添加公钥到Github 根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。 登录Github，右上角 头像 -&gt; Settings —&gt; SSH keys —&gt; Add SSH key。把公钥粘贴到key中，填好title并点击 Add key。 git bash中输入命令ssh -T git@github.com，选yes，等待片刻可看到成功提示。 修改本地的ssh remote url，不用https协议，改用git协议 Github仓库中获取ssh协议相应的url 本地仓库执行命令git remote set-url origin SSH对应的url，配置完后可用git remote -v查看结果 这样git push或hexo d时不再需要输入账号密码。 搭建博客注，以下命令行需要在Git终端中执行(右键单击 -&gt; Git bash)。 安装Git：下载安装后，注册Github账号并配置Git和SSH公私钥 安装Node.js 安装hexo：npm install -g hexo，可用hexo -v查看版本。这里我用的是3.1.1。也可以指定版本：npm install hexo@3.1.1 -g 创建hexo文件夹：新建放置博客的文件夹，进入并执行命令hexo init。hexo 会在目标文件夹建立网站所需要的所有文件。 安装依赖包：npm install 创建Github Repository：Repository名字必须是你的Github名.github.io，比如我是loveNight.github.io 部署：打开博客根目录下的_config.yml文件，末尾添加如下信息。 1234deploy: type: git repository: 上一步的Github仓库地址，项目主页点SSH再复制URL branch: master 然后执行命令： 12hexo generate # 生成静态页面，可以简化为hexo ghexo deploy # 部署到Github，可以简化为hexo d 浏览器访问loveNight.github.io就能看到自己的Blog了，一般延迟十分钟左右才能看到效果。一开始看到404页面不要惊慌，耐心等等。 手打党请注意，配置文件的冒号后必须有一个空格。 如果报错 1Deployer not found:git 运行命令 1npm install hexo-deployer-git --save hexo使用生成静态页面1hexo generate 本地启动1hexo server 浏览器输入localhost:4000就可以看到效果。当你修改了文章或配置文件时，保存文件再刷新浏览器就能看到修改后的效果，非常方便。 新建文章1hexo new post "title" # 生成新文章：\source\_posts\title.md，可省略post 新建页面1hexo new page "title" post、page等可以改成其他layout，可用layout在scaffolds目录下查看。在同目录下创建文件来添加自己的layout，也可以编辑现有的layout，比如post的layout默认是\scaffolds\post.md。 编辑文章打开新建的文章\source\_posts\postName.md： 12345678910title: HelloWorld！ # 文章页面上的显示名称，可以任意修改，不会出现在URL中date: 2015-11-09 15:56:26 # 文章生成时间，一般不改categories: # 文章分类目录，参数可省略 - 随笔 - 瞬间tags: # 文章标签，参数可省略 - hexo - blog # 个数不限，单个可直接跟在tags后面---这里开始使用markdown格式输入你的正文。 多级分类语法格式：（标签也可以用类似的写法） 12345678# 第一种categories: - 一级分类 - 二级分类 - etc...# 第二种：categories: [一级分类, 二级分类] 首页文章预览添加图片： 123photos: - http://xxx.com/photo1.jpg - http://xxx.com/photo2.jpg 正文中可以使用``设置文章摘要 如下: 123以上显示在摘要中&lt;!--more--&gt;以下是余下全文 more 以上内容即是文章摘要，如果设置了主页只显示摘要，则more以下内容点击 Read More 链接打开全文才显示。 简单命令hexo现在支持更加简单的命令格式了，比如： 1234hexo g == hexo generate # 生成hexo d == hexo deploy # 部署 # 可与hexo g合并为 hexo d -ghexo s == hexo server # 本地预览hexo n == hexo new # 写文章 插入图片博客中的图片文件可以直接放在source文件夹下，部署时上传到Github仓库中。但是Github项目容量有限，而且主机在国外，访问速度较慢，把图片放在国内的图床上是个更好的选择。我用的是七牛云存储 免费用户实名审核之后，可以获取10GB永久免费存储空间、每月10GB下载流量、每月10万次Put请求、每月100万次Get请求，做图床绰绰有余。 注册账号，新建空间，我的新空间名是blog，专门用来放置博客上引用的资源。 进入空间后点击「内容管理」，再点击「上传」： 七牛空间没有文件夹的概念，但是允许为文件添加带斜杠/的前缀，用来给资源分类。这里我设置前缀为img/Hexo 3.1.1 静态博客搭建指南/。上传了一张图片,在右侧可以找到外链，复制地址： Markdown 插入图片的语法为： 1![](图片网址) 上传图片 -&gt; 获取外链 -&gt; 写入Markdown，就这么简单！ 由于七牛防盗链的白名单无法添加localhost，暂时不设置防盗链，否则hexo s调试的时候，看不到图片。 配置博客全站配置注意：文件中配置项的冒号后面必须加空格，否则报错 下面有些选项要配置后文的插件才有效，文件中已注明。 整站的配置：博客根目录下的\_config.yml文件。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132# Hexo Configuration## Docs: http://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: ZEROYU # 站点名subtitle: # 副标题description: 一只单线程HACKERauthor: ZEROYU # 作者，在站点左下角可以看到#avatar: /images/avatar.jpg # 头像。Next主题增加的字段language: zh-Hans # 语言。Next主题增加的字段timezone: Asia/Shanghaisince: 2015 # 博客建立年份，Next主题增加的字段# 多说 ShortNameduoshuo_shortname: # xxx.duoshuo.com，xxx即是shortname。# Social linkssocial: Github: https://github.com/zer0yu Weibo: http://weibo.com/Z3r0yu Email: zeroyu.xyz@gmail.com # zhihu: http://www.zhihu.com/people/your-user-name# title, chinese availablelinks_title: 友情链接# linkslinks: 我的CSDN博客: http://blog.csdn.net/zeroyu_xyz# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://zer0yu.github.io/ # 网址root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :lang # 国际化文件夹skip_render: # 跳过指定文件的渲染# Writing # 文章布局、写作格式的定义new_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0 # 1 为小写， 2 为大写render_drafts: false # 显示草稿post_asset_folder: false # 启动asset文件夹relative_link: false # 链接改为与根目录的相对地址future: true # 显示未来的文章highlight: enable: true line_number: true auto_detect: true tab_replace:# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination # 每页显示文章数## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions # 这里配置站点所用主题和插件## Plugins: http://hexo.io/plugins/plugins:baidusitemap: # 需要安装插件 npm install hexo-generator-baidu-sitemap@0.1.1 --save path: baidusitemap.xml# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: nextfeed: type: atom #feed 类型 (atom/rss2) path: atom.xml #rss 路径 limit: 0 #在 rss 中最多生成的文章数(0显示所有)# 自定义站点内容搜索# 需要先安装插件：# npm install hexo-generator-search --savesearch: path: search.xml field: all # 如只想索引文章，可设置为post# Deployment # 站点部署到github## Docs: http://hexo.io/docs/deployment.htmldeploy: type: git repository: git@github.com:zer0yu/zer0yu.github.io.git branch: master# ---------------下面选项需要对应插件的支持---------------# npm install hexo-generator-index --save# npm install hexo-generator-archive --save# npm install hexo-generator-category --save# npm install hexo-generator-tag --saveindex_generator: per_page: 10 ##首页默认10篇文章标题 如果值为0不分页archive_generator: per_page: 20 ##归档页面默认20篇文章标题 yearly: true ##生成年视图 monthly: true ##生成月视图tag_generator: per_page: 10 ##标签分类页面默认10篇文章category_generator: per_page: 10 ###分类页面默认10篇文章 更换主题默认主题太丑，换成NexT主题。 安装：在博客根目录下执行git clone https://github.com/iissnan/hexo-theme-next.git themes/next。 启用：修改博客根目录下的_config.yml配置文件中的theme属性，将其设置为next。 更新：在themes/next目录下执行git pull。（暂时不需要） \themes\next\_config.yml修改主题配置。 我的_config.yml文件： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484# ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# Put your favicon.ico into `hexo-site/source/` directory.favicon: /favicon.ico# Set default keywords (Use a comma to separate)keywords: "ZEROYU, SEC"# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link.# Set rss to specific value if you have burned your feed already.rss:# Specify the date when the site was setup#since: 2015# icon between year and author @Footerauthoricon: heart# Footer `powered-by` and `theme-info` copyrightcopyright: true# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.# See: https://support.google.com/webmasters/answer/139066# Tips: Before you open this tag, remeber set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )canonical: true# Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.seo: false# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)menu: home: / categories: /categories about: /about archives: /archives tags: /tags #sitemap: /sitemap.xml #commonweal: /404.html# Enable/Disable menu icons.# Icon Mapping:# Map a menu item to a specific FontAwesome icon name.# Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.# When an question mask icon presenting up means that the item has no mapping icon.menu_icons: enable: true #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome home: home about: user categories: th schedule: calendar tags: tags archives: archive sitemap: sitemap commonweal: heartbeat# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Musescheme: Mist#scheme: Pisces# ---------------------------------------------------------------# Font Settings# - Find fonts on Google Fonts (https://www.google.com/fonts)# - All fonts set here will have the following styles:# light, light italic, normal, normal intalic, bold, bold italic# - Be aware that setting too much fonts will cause site running slowly# - Introduce in 5.0.1# ---------------------------------------------------------------font: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default) host: # Global font settings used on &lt;body&gt; element. global: # external: true will load this font family from host. external: true family: Lato # Font settings for Headlines (h1, h2, h3, h4, h5, h6) # Fallback to `global` font settings. headings: external: true family: # Font settings for posts # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo # Fallback to `global` font settings. # The `size` option use `px` as unit logo: external: true family: size: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: size:# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# Social Links# Key is the link label showing to end users.# Value is the target link (E.g. GitHub: https://github.com/iissnan)#social: #LinkLabel: Link# Social Links Icons# Icon Mapping:# Map a menu item to a specific FontAwesome icon name.# Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.# When an globe mask icon presenting up means that the item has no mapping icon.social_icons: enable: true # Icon Mappings. # KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome GitHub: github Twitter: twitter Weibo: weibo# Sidebar Avatar# in theme directory(source/images): /images/avatar.jpg# in site directory(source/uploads): /uploads/avatar.jpg#avatar:# Table Of Contents in the Sidebartoc: enable: true # Automatically add list number to toc. number: true# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero#creative_commons: by-nc-sa#creative_commons:sidebar: # Sidebar Position, available value: left | right position: left #position: right # Sidebar Display, available value: # - post expand on posts automatically. Default. # - always expand for all pages automatically # - hide expand only when click on the sidebar toggle icon. # - remove Totally remove sidebar including sidebar toggler. display: post #display: always #display: hide #display: remove# Blogrolls#links_title: Links#links_layout: block#links_layout: inline#links: #Title: http://example.com/# ---------------------------------------------------------------# Post Settings# ---------------------------------------------------------------# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.scroll_to_more: true# Automatically excerpt description in homepage as preamble text.excerpt_description: true# Automatically Excerpt. Not recommand.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: false length: 150# Post meta display settingspost_meta: item_text: true created_at: true updated_at: false categories: true# Wechat Subscriber#wechat_subscriber: #enabled: true #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg #description: ex. subscribe to my blog by scanning my public wechat account# ---------------------------------------------------------------# Misc Theme Settings# ---------------------------------------------------------------# Custom Logo.# !!Only available for Default Scheme currently.# Options:# enabled: [true/false] - Replace with specific image# image: url-of-image - Images's urlcustom_logo: enabled: false image:# Code Highlight theme# Available value:# normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: normal# ---------------------------------------------------------------# Third Party Services Settings# ---------------------------------------------------------------# MathJax Supportmathjax: enable: false per_page: false cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML#local searchsearch: path: search.xml field: post format: html limit: 10000# Swiftype Search API Key#swiftype_key: oUgCiUNA9jix_1j3uXpn# Baidu Analytics IDbaidu_analytics: # Duoshuo ShortNameduoshuo_shortname: # Disqus#disqus_shortname:# Hypercomments#hypercomments_id:# Gentie productKey#gentie_productKey:# Support for youyan comments system.# You can get your uid from http://www.uyan.cc#youyan_uid: your uid# Baidu Share# Available value:# button | slide# Warning: Baidu Share does not support https.#baidushare:## type: button# Share#jiathis:# Warning: JiaThis does not support https.#add_this_id:# Share#duoshuo_share: true# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/#google_site_verification:# Google Analytics#google_analytics:# CNZZ count#cnzz_siteid:# Application Insights# See https://azure.microsoft.com/en-us/services/application-insights/# application_insights:# Make duoshuo show UA# user_id must NOT be null when admin_enable is true!# you can visit http://dev.duoshuo.com get duoshuo user id.duoshuo_info: ua_enable: true admin_enable: false user_id: 0 #admin_nickname: Author# Facebook SDK Support.# https://github.com/iissnan/hexo-theme-next/pull/410facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true# Facebook comments plugin# This plugin depends on Facebook SDK.# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.facebook_comments_plugin: enable: false num_of_posts: 10 # min posts num is 1 width: 100% # default width is 550px scheme: light # default scheme is light (light or dark)# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.leancloud_visitors: enable: true app_id: #&lt;app_id&gt; app_key: #&lt;app_key&gt;# Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count: # count values only if the other configs are false enable: false # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer:# Tencent analytics ID# tencent_analytics:# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: false# Google Calendar# Share your recent schedule to others via calendar page## API Documentation:# https://developers.google.com/google-apps/calendar/v3/reference/events/listcalendar: enable: false calendar_id: &lt;required&gt; api_key: &lt;required&gt; orderBy: startTime offsetMax: 24 offsetMin: 4 timeZone: showDeleted: false singleEvents: true maxResults: 250# Algolia Searchalgolia_search: enable: false hits: per_page: 10 labels: input_placeholder: Search for Posts hits_empty: "We didn't find any results for the search: $&#123;query&#125;" hits_stats: "$&#123;hits&#125; results found in $&#123;time&#125; ms"#! ---------------------------------------------------------------#! DO NOT EDIT THE FOLLOWING SETTINGS#! UNLESS YOU KNOW WHAT YOU ARE DOING#! ---------------------------------------------------------------# Motionuse_motion: true# Fancyboxfancybox: true# Canvas-nestcanvas_nest: false# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: fancybox_css: # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: # Internal version: 1 # https://www.algolia.com algolia_instant_js: algolia_instant_css: # Internal version: 1.0.0 # https://github.com/hustcc/canvas-nest.js canvas_nest:# Assetscss: cssjs: jsimages: images# Theme versionversion: 5.1.0 个性化设置按照NexT 使用文档设置一下，其中的内容下面不再赘述。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[commix-系统命令注入自动化测试实例]]></title>
      <url>%2F2017%2F01%2F21%2Fcommix-%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E5%AE%9E%E4%BE%8B%2F</url>
      <content type="text"><![CDATA[引言​ commix是一款很好用的命令注入的工具，前几天看了看国内对其的介绍和使用示例挺少的，所以最近有空就写了这一篇文章来列举几个使用的栗子。 概念​ 命令注入就是部分Web应用程序提供了一些命令执行的操作，那么在Web应用程序底层去调用系统操作命令时，如果没有过滤好用户输入的数据，就很有可能形成系统命令执行漏洞来直接执行操作系统命令。详细讲解参考Command Injection commix简介​ 此处就不详细介绍了如果想要了解可以看这两篇文章： ​ http://www.mottoin.com/91981.html ​ http://www.mottoin.com/91806.html 测试环境搭建​ 在这里你可以使用DVWA或者DWAPP来实战，当然我觉得要尽可能全的包含各种类型的命令注入漏洞才算完美所以我们在此处使用commix提供的一个测试平台commix-testbed。 1.如果你在使用windows平台那么我推荐PHPStudy来搭建环境 安装完成后你只需要在phpstudy的www目录下打开cmd键入： git clone https://github.com/commixproject/commix-testbed.git (当然你要确保你安装了Git) 之后只要启动phpstudy就可以在浏览器中访问了 2.如果你使用的是Linux或者MacOS平台我推荐用xampp来搭建环境 搭建好之后你就可以看到如下界面 环境搭建好后我们来进行渗透测试 示例一：Results-based命令注入攻击我们选择GET方式的Classic regular example ping下127.0.0.1试下 复制url并打开commix开始hack 渗透主机为win后期可以借助empire（不知道empire？？？没关系戳我） 可以使用 commix -u &quot;http://192.168.1.108/commix-testbed/scenarios/regular/GET/classic.php?addr=127.0.0.1&quot; --hostname --current-user --sys-info 含义：显示当前测试主机的主机名，用户名和系统信息 如果渗透主机为Linux则后期可以借助msf(不会msf？？？没关系戳我) 示例二：User-Agent HTTP头注入攻击选择User-Agent HTTP Header中的第一个Classic user-agent-based example http://192.168.1.108/commix-testbed/scenarios/user-agent/ua(classic).php 然后开始使用commix注入： commix -u &quot;http://192.168.1.108/commix-testbed/scenarios/user-agent/ua(classic).php&quot; --data=&quot;addr=192.168.1.121&quot; --technique=&quot;c&quot; 含义：post参数addr=192.168.1.121并指定要使用的进样技术 效果如下： 示例三：Referer HTTP头注入攻击选择Referer HTTP Header中的第一个Classic referer-based example http://192.168.1.108/commix-testbed/scenarios/referer/referer(classic).php 然后开始使用commix注入： commix -u &quot;http://192.168.1.108/commix-testbed/scenarios/referer/referer(classic).php&quot; --data=&quot;addr=192.168.1.121&quot; --technique=&quot;c&quot; 和上面的差不多不解释了 效果如下： 示例四：Blind 命令注入攻击选择Regular (GET / POST)中的Blind regular example http://192.168.1.108/commix-testbed/scenarios/regular/GET/blind.php?addr=127.0.0.1 然后开始使用commix注入： commix -u &quot;http://192.168.1.108/commix-testbed/scenarios/regular/GET/blind.php?addr=127.0.0.1&quot; --technique=&quot;tf&quot; -v 1 效果如下： 执行命令： 彩蛋上面的例子不是很全，有几个使用commix进行命令注入的视频，有兴趣可以下载看下 链接: https://pan.baidu.com/s/1qXMNjZm 密码: 5peb 参考https://github.com/commixproject/commix-testbed https://github.com/commixproject/commix http://www.commixproject.com/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[3xp10it搭建指南]]></title>
      <url>%2F2017%2F01%2F21%2F3xp10it%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%2F</url>
      <content type="text"><![CDATA[引言​ 突然想到前几天看到Scanners-Box有一款扫描器3xp10it于是就搭建使用了一下，刚觉还不错，就简要记录下我的搭建过程。（bing api key目前已经无法注册） 安装环境kali linux rolling 2016.2 安装过程1.安装git apt-get install git 2.把3xp10it克隆到本合适的位置 1git clone https://github.com/3xp10it/3xp10it.git 3.安装相关依赖,第一次使用工具时需要运行,以后不用再运行 1bash beforeWork.sh 4.python3安装 12345678apt-get install python3或:wget https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tar.xztar xJf Python-3.5.2.tar.xzcd Python-3.5.2./configure --prefix=/opt/python3make &amp;&amp; make installln -s /opt/python3/bin/python3.5 /usr/local/bin/python3 5.pip3安装 1234echo "deb-src http://http.kali.org/kali kali main non-free contrib" &gt;&gt; /etc/apt/sources.listecho "deb-src http://security.kali.org/kali-security kali/updates main contrib non-free" &gt;&gt;/etc/apt/sources.listapt-get updateapt-get install python3-pip 6.mysql 需要mysql，如果mysql密码忘记了可以参考这篇文章《kali-linux-2016-使用指南二》 7.运行主程序,工作时运行,第一次运行时需要先运行上面的beforeWork.sh 1python3 3xp10it.py 8.要新开一个终端运行以便于查看相关输出信息,该工具为web后台 1python3 web.py 效果示例 关于这款工具a)3xp10it是一个自动化渗透测试框架,目前没有做到完全自动化[自动上传漏洞利用框架和自动fuzz框架暂时没有加入] b)支持功能列表 cdn真实ip查找模块 旁站获取[如果在cdn模块中发现有cdn但是没有获取到真实ip则不进行旁站获取] 子站获取 高危漏洞扫描模块 爬虫模块 目标网站脚本类型检测 目录扫描模块 sqli扫描模块 robots/sitemap自动收集 cms识别与cms漏洞扫描模块 自动识别管理员页面并爆破[支持自动识别简单验证码] webshell自动查找与爆破,支持asp,php,aspx,jsp,支持chopper一句话webshell和大马类型webshell 12345a)apache,iis,nginx,lighttpd在phpstudy中测试默认可接收1000个post参数 b)一句话类型webshell根据上面的特点可以正常情况下(单线程)的1000倍速度来爆破,可用大字典爆破,但是不能用多线程, 可能是因为用多线程会太快而让web server觉得每次的参数不止1000个 c)其他类型web server未测试,暂用多线程1倍速爆破,用最常用的webshell较小字典,17659个左右 d)大马类型webshell由于表单名是一定的,所以不能以1000倍速爆破,于是也用和c)中一样的小字典多线程1倍速爆破 资源文件收集 端口扫描模块 whois信息收集 支持人工渗透时记录笔记 123笔记功能需要额外安装phpmyadmin等可以编辑数据库的工具,访问数据库,在targets|xxx_pang|xxx_sub表中有一个note列可用于记录人工渗透时的笔记,查看扫描结果最好也用phpmyadmin来查看数据库的targets表和xxx_pang和xxx_sub表,如果不安装phpmyadmin也可由web.py在web后台中查看扫描结果 c)可选工作模式 模式一:扫描目标和目标的所有旁站模式二:扫描目标和目标的所有子站模式三:扫描目标和目标的所有旁站和所有子站模式四:只扫描目标 123默认使用模式一扫描[在运行3xp10it后可自选],上面四种模式中的[扫描目标]里的目标支持批量导入多个目标和手工录入多个目标.四种工作模式中与旁站和子站相关的由程序自动完成[eg.选择模式三工作时,将自动获取导入的目标的所有旁站和所有子站,并对这些旁站和子站依次遍历上面的各个扫描模块] d)特点 可在中断后重新运行时从断点附近接着上次的过程扫描,不用重新扫描 运行3xp10it后自动从数据库中取出待完成的扫描任务进行扫描 支持正常扫描和优先扫描两个扫描组,如果优先扫描组里有任务则先扫描优先扫描组里的目标,在添加任务时可选择将目标是 正常扫描还是优先扫描 上述支持功能列表中的功能默认全部遍历扫描,如果要使用单个模块可在web界面使用 3xp10it配备一个web后台,web页面可查询当前扫描结果与使用单个模块功能 3xp10it独立于web运行,也即没有目录下的pannel文件夹也可运行 目录下的pannel文件夹是Django为3xp10it写的一些相关界面,web界面使用在下面介绍 支持找到高危漏洞邮件通知[eg.sqli,webshell爆破成功等] web后台相当于3xp10it的部分界面+分割的模块化工具+exp10it中没有的功能的附加工具的集合 web后台由Django==1.10.3开发 web后台中支持工具列表 targets:查看扫描目标,新增/删除扫描目标 获取旁[子]站:获取旁站或子站模块 xcdn:尝试识别cdn背后的真实ip 高危漏扫:高危漏洞扫描模块 sqli:sql注入模块 扫目录:目录扫描模块 cms漏扫:cms漏洞扫描模块 webshell爆破:webshell爆破模块 管理员登录爆破:管理员登录爆破模块 waf爆破:waf自动爆破模块[3xp10it中没有这个功能] dbquery:数据库语句执行接口 扫描结果:查看当前扫描结果 详细1234567891011121314151617181920212223242526272829303132333435363738394041421.3xp10it需要用到bingapi,需要先申请好bingapi2.上面的web.py不一定要运行,核心功能在3xp10it.py文件中3.如果要后台功能需运行python3 web.py4.如果要使用web.py,重新开机后需要重新运行web.py5.运行web.py常见错误:端口被占用.解决方法:a)netstat -ntlp | grep 8000b)在a)中找到pid后kill -9 pidc)重新运行python3 web.py6.3xp10it中调用的是关键模块exp10it中的exp10itScanner,exp10it模块由pip3 install exp10it安装,安装路径一般如下:/usr/local/lib/python3.5/dist-packages7.文件分布结构如下:当前目录.├── 3xp10it.py├── pannel│ ├── ghostdriver.log│ ├── manage.py│ ├── models.py[web后台没有用django的模型]│ ├── pages[web页面的html文件,相当于django的template]│ └── pannel[django相关文件]│ ├── __init__.py│ ├── settings.py│ ├── urls.py[django配置的访问与响应规则]│ ├── views.py[django配置的关键函数]│ └── wsgi.py├── readme.md├── uninstall.py└── web.py/usr/local/lib/python3.5/dist-packages路径下相关文件├── cms_identify[cms识别模块相关文件]├── cms_scan[cms漏洞扫描模块相关文件]├── config.ini[配置文件]├── dicts[字典文件]├── dirsearch[目录扫描模块相关文件]├── exp10it.py[关键模块文件]├── exps[exp模块相关文件]├── log[日志文件夹]├── tools[web后台中的各个工具] FAQ12345678910111213141516Q0:config.ini 这个文件怎么没有找到?A0:config.ini在python3 3xp10it.py初次运行后会自动生成,用于设置bing API key,发邮件的帐号,数据库连接配置,扫描模式 等信息,一般会在/usr/local/lib/python3.5/dist-packages/config.ini这里,与python3的安装路径有关Q1:单个模块怎么使用?A1:单个模块执行有2种方法: 1)web后台 2)cd /usr/local/lib/python3.5/dist-packages/tools &amp;&amp; ls -alQ2:为什么需要连接google才能用?A2:要保证能直接ping通google证明可以绕过GFW,有些domain不连vpn会无法访问,这样的domain在正常情况下被GFW拦截时会影响 代码获取真实ip的效果,代码中强制要求连接vpnQ3:bing api key怎么注册?网上的教程都是错的?A3:好像是bing暂停注册了,这样的话只能向以前注册过的人要,如果bing一直这样,将考虑在代码中修改这个接口,但3个月内暂 时不修改 参考https://github.com/3xp10it/3xp10it http://zeroyu.xyz/2017/01/05/kali-linux-2016-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%E4%BA%8C/]]></content>
    </entry>

    
  
  
    
  
</search>
